#!/bin/sh

if [ -z "$_hsenv_private_root_dir" ]; then
  export _hsenv_private_root_dir=`cd "$(dirname $0)/.."; pwd`
fi
export _hsenv_private_libexec_dir="${_hsenv_private_root_dir}/libexec"
export _hsenv_private_template_dir="${_hsenv_private_root_dir}/template"
export _hsenv_private_tmp_dir="${_hsenv_private_root_dir}/tmp"
export _hsenv_private_cache_dir="${_hsenv_private_tmp_dir}/cache"
export _hsenv_private_extract_archive_tmp_dir="${_hsenv_private_tmp_dir}/extract_archive"

. "$_hsenv_private_libexec_dir/log"
. "$_hsenv_private_libexec_dir/host"
. "$_hsenv_private_libexec_dir/option"
. "$_hsenv_private_libexec_dir/package"
. "$_hsenv_private_libexec_dir/downloader"
. "$_hsenv_private_libexec_dir/archive"

export HSENV_PV_COMMAND=cat
if has_command pv; then
  export HSENV_PV_COMMAND=pv
fi

if echo "foo" | grep -E "^foo?$" > /dev/null 2> /dev/null; then
  HSENV_EGREP_COMMAND=grep
  HSENV_EGREP_OPTION=-E
elif has_command egrep; then
  HSENV_EGREP_COMMAND=egrep
else
  echo "error: \`grep -E' or \`egrep' required"
  exit 1
fi

EGREP() (
  $HSENV_EGREP_COMMAND $HSENV_EGREP_OPTION "$@"
)

if awk 'BEGIN{sub(/foo/, "")}' 2> /dev/null; then
  HSENV_NAWK_COMMAND=awk
elif has_command nawk; then
  HSENV_NAWK_COMMAND=nawk
else
  echo "error: \`nawk' required"
  exit 1
fi

NAWK() (
  $HSENV_NAWK_COMMAND "$@"
)
