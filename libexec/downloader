#!/bin/sh

source_url() (
  echo http://www.haskell.org/ghc/dist/$1/ghc-$1-src.tar.bz2
)

binary_url() (
  combo=$1
  versions=$2
  if [ -z "$versions" ]; then
    versions=`cd $HSENV_LIBEXEC_DIR/binchecker/versions && echo *`
  fi
  error_log_file=`log_file`
  if [ $? -ne 0 ]; then
    error_log_file=/dev/null
  fi
  for version in `sort_package_version $versions`; do
    command=$HSENV_LIBEXEC_DIR/binchecker/versions/$version
    url_bak=`$command $combo 2>> $error_log_file`
    if [ -n "$url_bak" ]; then
      url=$url_bak
    fi
  done
  echo $url
)

url_basename() (
  echo $1 | sed 's/#.*//' | sed 's/\?.*//' | sed 's%.*/%%'
)

url_to_cache_name() (
  echo $1 | sed 's,/,%2F,g' | sed 's/:/%3A/g' | sed 's/;/%3B/g' | sed 's/\./%2E/g'
)

has_downloader() (
  tool=$1
  if ! has_command $tool; then
    return 1
  fi
  if [ "$tool" = "lwp-download" ]; then
    lwp-download http://example.com $HSENV_TMP_DIR/lwp-download-check > /dev/null 2> /dev/null
  else
    true
  fi
)

downloader() (
  url=$1
  file=$2
  mkdir -p $HSENV_CACHE_DIR
  cache_file=$HSENV_CACHE_DIR/`url_to_cache_name $url`
  if [ -e $cache_file ]; then
    hsenv_info Use local cache for \`$url\'
    cp $cache_file $file
    return
  fi

  hsenv_info Downloading \`$url\'
  downloading_cache_file=$cache_file.downloading
  rm -f $downloading_cache_file

  if has_downloader curl; then
    downloader_curl $url $downloading_cache_file
  elif has_downloader wget; then
    downloader_wget $url $downloading_cache_file
  elif has_downloader fetch; then
    downloader_fetch $url $downloading_cache_file
  elif has_downloader lwp-download; then
    downloader_lwp_download $url $downloading_cache_file
  else
    hsenv_error "curl/wget/fetch/lwp-download required"
    return 1
  fi

  download_result=$?
  if [ $download_result -ne 0 ]; then
    rm -f $downloading_cache_file
    return $download_result
  fi

  test -e $downloading_cache_file && mv $downloading_cache_file $cache_file && cp $cache_file $file
)

execute_downloader_with_pv() (
  file=$1
  shift
  ($* || rm -f $file) | $HSENV_PV > $file
  test -e $file
)

downloader_curl() (
  execute_downloader_with_pv $2 curl --location --fail --silent --show-error $1
)

downloader_wget() (
  execute_downloader_with_pv $2 wget --output-document=- $1
)

downloader_fetch() (
  execute_downloader_with_pv $2 fetch -o - $1
)

downloader_lwp_download() (
  lwp-download $1 $2
)
