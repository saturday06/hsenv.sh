#!/bin/sh

ignorable_tar_error() (
  tar_error=$1
  if ! is_mingw; then
    cat $tar_error
    return 1
  fi
  if [ -z "`cat $tar_error`" ]; then
    return 1
  fi
  cat $tar_error | \
    $EGREP -v "tar: Archive value [0-9]+ is out of [gu]id_t range 0\.\.[0-9]+$" | \
    $EGREP -v "tar:? Exiting with failure status due to previous errors$" > $tar_error.filtered
  if [ -n "`cat $tar_error.filtered`" ]; then
    cat $tar_error.filtered
    return 1
  fi
  return 0
)

extract_tar() (
  tmp_dir=$1
  tar_error=$HSENV_EXTRACT_ARCHIVE_DIR/$$.error
  $PV | (cd $tmp_dir && LC_ALL=C $TAR xf -) 2> $tar_error
  result=$?
  if test $result -ne 0 && ignorable_tar_error $tar_error; then
    return 0
  fi
  return $result
)

extract_archive() (
  archive=$1
  output=$2

  tmp_dir=$HSENV_EXTRACT_ARCHIVE_DIR/$$
  rm -fr $tmp_dir
  mkdir -p $tmp_dir

  if echo $1 | $EGREP "\.xz$" > /dev/null; then
    xz -cd $1 | extract_tar $tmp_dir
  elif echo $1 | $EGREP "\.bz2$" > /dev/null; then
    bzip2 -cd $1 | extract_tar $tmp_dir
  elif echo $1 | $EGREP "\.gz$" > /dev/null; then
    gzip -cd $1 | extract_tar $tmp_dir
  else
    echo "Unsupported archive"
    return 1
  fi
  extract_result=$?
  if [ $extract_result -ne 0 ]; then
    return $extract_result
  fi

  dir_count=`cd $tmp_dir && ls | wc -l | tr -d "[:space:]"`
  if [ $dir_count != "1" ]; then
    echo "extract archive \`$archive' failed. Number of root directories is not 1 but $dir_count."
    return 1
  fi
  rm -fr $output
  mv $tmp_dir/`cd $tmp_dir && ls` $output
  mv_result=$?
  if [ $mv_result -eq 0 ]; then
    rm -fr $tmp_dir
  fi
  return $mv_result
)
