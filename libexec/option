#!/bin/sh

read_option() { # No subshell
  export HSENV_GHC=
  export HSENV_NAME=
  export HSENV_LOG_LEVEL=3
  export HSENV_COMMAND=hsenv_main
  export HSENV_PS1_INDICATOR=true
  export HSENV_SANITY_CHECK=true
  export HSENV_SHARE_CABAL_CACHE=true
  if has_command cabal; then
    export HSENV_BOOTSTRAP_CABAL=false
  else
    export HSENV_BOOTSTRAP_CABAL=true
  fi

  for parsed_option in $*; do
    case $parsed_option in
      --ghc=*)
        HSENV_GHC=${parsed_option#*=}
        shift
        ;;
      --name=*)
        HSENV_NAME=${parsed_option#*=}
        shift
        ;;
      -v|--verbose)
        [ $HSENV_LOG_LEVEL -lt 4 ] && HSENV_LOG_LEVEL=4
        shift
        ;;
      --very-verbose)
        [ $HSENV_LOG_LEVEL -lt 5 ] && HSENV_LOG_LEVEL=5
        shift
        ;;
      --version)
        HSENV_COMMAND=hsenv_version
        return
        ;;
      -h|--help)
        HSENV_COMMAND=hsenv_help
        return
        ;;
      --dont-share-cabal-cache)
        HSENV_SHARE_CABAL_CACHE=false
        shift
        ;;
      --make-cmd=*)
        MAKE=${parsed_option#*=}
        shift
        ;;
      --tar-cmd=*)
        TAR=${parsed_option#*=}
        shift
        ;;
      --no-ps1-indicator)
        HSENV_PS1_INDICATOR=false
        shift
        ;;
      --skip-sanity-check)
        HSENV_SANITY_CHECK=false
        shift
        ;;
      --bootstrap-cabal)
        HSENV_BOOTSTRAP_CABAL=true
        shift
        ;;
      *)
        hsenv_abort Error: unknown option \`$parsed_option\'
        ;;
    esac
  done
}

is_version() (
  echo $* | $EGREP "^[0-9]+(\.[0-9]+)*$" > /dev/null
)

is_url() (
  echo $* | $EGREP "^https?://.+$" > /dev/null
)

installation_of() (
  if [ -z "$1" ]; then
    echo transplant_local_executable
  elif is_version $1; then
    echo install_remote_source
  elif is_url $1; then
    echo install_remote
  else
    echo install_local
  fi
)

has_command() (
  which $1 > /dev/null 2> /dev/null
)

export PV=cat
if has_command pv; then
  HSENV_PV() (
    pv 2>&$HSENV_RAW_STDERR
    pv_result=$?
    if [ -t $HSENV_RAW_STDERR ]; then
      $NAWK 'BEGIN { printf("%c[F%c[K", 27, 27) }' >&$HSENV_RAW_STDERR
    fi
    return $pv_result
  )
  export PV=HSENV_PV
fi

if echo "foo" | grep -E "^foo?$" > /dev/null 2> /dev/null; then
  HSENV_GREP_E() (
    grep -E "$@"
  )
  export EGREP=HSENV_GREP_E
elif has_command egrep; then
  export EGREP=egrep
else
  echo "error: \`grep -E' or \`egrep' required"
  exit 1
fi

if awk 'BEGIN{sub(/foo/, "")}' 2> /dev/null; then
  export NAWK=awk
elif has_command nawk; then
  export NAWK=nawk
else
  echo "error: \`nawk' required"
  exit 1
fi

export MAKE=make
if has_command gmake; then
  export MAKE=gmake
fi

export TAR=tar
if has_command gtar; then
  export TAR=gtar
fi

